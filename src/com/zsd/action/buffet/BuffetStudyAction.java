/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.buffet;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.factory.AppFactory;
import com.zsd.module.BuffetSendInfo;
import com.zsd.module.GradeSubject;
import com.zsd.module.UserClassInfo;
import com.zsd.page.PageConst;
import com.zsd.service.BuffetSendInfoManager;
import com.zsd.service.GradeSubjectManager;
import com.zsd.service.UserClassInfoManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.Convert;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 06-25-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class BuffetStudyAction extends DispatchAction {
	
	/**
	 * 自助餐在线学习页面
	 * @author wm
	 * @date 2019-6-25 上午11:19:48
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward goBuffetStudyPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("buffetStudyPage");
	}
	
	/**
	 * 获取网络导师、班内老师发布的自助餐数据
	 * @author wm
	 * @date 2019-6-25 上午11:20:51
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward getBuffetSendData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		UserClassInfoManager ucm = (UserClassInfoManager)AppFactory.instance(null).getApp(Constants.WEB_USER_CLASS_INFO);
		GradeSubjectManager gsm = (GradeSubjectManager)AppFactory.instance(null).getApp(Constants.WEB_GRADE_SUBJECT_INFO);
		BuffetSendInfoManager bsm = (BuffetSendInfoManager)AppFactory.instance(null).getApp(Constants.WEB_BUFFET_SEND_INFO);
		//获取我所在年级的学科
		Integer userId = CommonTools.getLoginUserId(request);
		Integer subId = CommonTools.getFinalInteger("subId", request);
		Integer comStatus = CommonTools.getFinalInteger("comStatus", request);//完成状态，默认未全部0
		String sDate = CommonTools.getFinalStr("sDate", request);
		String eDate = CommonTools.getFinalStr("eDate", request);
		Integer pageNo = CommonTools.getFinalInteger("pageNo", request);
		Integer pageSize = CommonTools.getFinalInteger("pageSize", request);
		if(pageSize <= 0){
			pageSize = 10;
		}
		
		String msg = "error";
		Map<String,Object> map = new HashMap<String,Object>();
		if(userId > 0){
			Integer count = bsm.listBsInfoByOption(userId, subId, -1, sDate, eDate).size();
			if(count > 0){
				msg = "success";
				Integer countPage = PageConst.getPageCount(count, pageSize);
				pageNo = PageConst.getPageNo(pageNo, countPage);
				List<BuffetSendInfo> bsList = bsm.listPageInfoByOption(userId, subId, -1, sDate, eDate, pageNo, pageSize);
				List<Object> list_d = new ArrayList<Object>();
				for(BuffetSendInfo bs : bsList){
					Map<String,Object> map_d = new HashMap<String,Object>();
					map_d.put("bsId", bs.getId());
					map_d.put("subName", bs.getStudyLogInfo().getSubject().getSubName());
					map_d.put("loreName", bs.getStudyLogInfo().getLoreInfo().getLoreName());
					map_d.put("studyResult", bs.getStudyResult());//1:未完成，2:已完成
					map_d.put("", bs);
					map_d.put("", bs);
					map_d.put("", bs);
					list_d.add(map_d);
				}
			}else{
				msg = "noInfo";
			}
			
			
			if(subId.equals(0)){
				subId = 2;//默认为数学
			}
			UserClassInfo  uc = ucm.getEntityByOpt(userId, 2);//获取学生所在班级信息
			if(uc != null){
				Integer gradeNumber = Convert.dateConvertGradeNumber(uc.getClassInfo().getBuildeClassDate());
				if(gradeNumber > 12){
					gradeNumber = 12;
				}
				String gradeName = Convert.NunberConvertChinese(gradeNumber);
				//获取当前年级的学科列表
				List<GradeSubject>  gsList = gsm.listSpecInfoByGname(gradeName);
				if(gsList.size() > 0){
					List<Object> list_g = new ArrayList<Object>();
					for(GradeSubject gs : gsList){
						Map<String,Object> map_g = new HashMap<String,Object>();
						map_g.put("subId", gs.getSubject().getId());
						map_g.put("subName", gs.getSubject().getSubName());
						if(gs.getSubject().getId().equals(subId)){
							map_g.put("selFlag", true);
						}else{
							map_g.put("selFlag", false);
						}
						list_g.add(map_g);
					}
					//获取自助餐题库列表
					map.put("subList", list_g);
				}
			}
		}
		return null;
	}
}