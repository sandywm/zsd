/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.base;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.zsd.factory.AppFactory;
import com.zsd.module.ClassInfo;
import com.zsd.module.School;
import com.zsd.module.TownInfo;
import com.zsd.module.User;
import com.zsd.service.ClassInfoManager;
import com.zsd.service.SchoolManager;
import com.zsd.service.TownManager;
import com.zsd.service.UserManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 04-28-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class BaseInfoAction extends DispatchAction {
	
	
	/**
	 * 根据省、市、县、乡、学段获取学校的列表（下拉列表用）
	 * @author Administrator
	 * @date 2019-4-29 下午03:08:03
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getSchoolData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		SchoolManager sm = (SchoolManager) AppFactory.instance(null).getApp(Constants.WEB_SCHOOL_INFO);
		String prov = Transcode.unescape_new("prov", request);
		String city = Transcode.unescape_new("city", request);
		String county = Transcode.unescape_new("county", request);
		String town = Transcode.unescape_new("town", request);
		Integer schoolType = CommonTools.getFinalInteger("schoolType", request);
		Integer yearSystem = CommonTools.getFinalInteger("yearSystem", request);
		List<School> sList = sm.listInfoByOpt(prov, city, county, town, schoolType,yearSystem);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg = "noInfo";
		if(sList.size() > 0){
			msg = "success";
			List<Object> list_d = new ArrayList<Object>();
			for(Iterator<School> it = sList.iterator() ; it.hasNext();){
				School sch = it.next();
				Map<String,Object> map_d = new HashMap<String,Object>();
				map_d.put("schoolId", sch.getId());
				map_d.put("schoolName", sch.getSchoolName());
				list_d.add(map_d);
			}
			map.put("schList", list_d);
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 定位当前IP省市
	 * @author wm
	 * @date 2019-6-10 上午11:27:40
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getAreaJson(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		Map<String,String> map = new HashMap<String,String>();
//		String address = CommonTools.getSelfArea_taobao("123.52.203.75");
////		String address = CommonTools.getSelfArea_taobao(CommonTools.getIpAddress(request));
//		JSONObject jsonResult = JSON.parseObject(address);
//		System.out.println(JSON.toJSONString(jsonResult, true));
//		JSONObject dataJson = jsonResult.getJSONObject("data");
//		String provName = dataJson.getString("region");
//		String cityName = dataJson.getString("city");
//		String provNo = dataJson.getString("region_id");
//		String cityNo = dataJson.getString("city_id");
//		map.put("provName", provName);
//		map.put("cityName", cityName);
//		map.put("provNo", provNo);
//		map.put("cityNo", cityNo);
		String address = CommonTools.getSelfArea(CommonTools.getIpAddress(request));
		
		map.put("provName", address.split(":")[0]);
		map.put("cityName", address.split(":")[1]);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 获取用户账号登录状态
	 * success:账号正常，loginOut：账号别处登录,sessionLose:超过3天未登陆,accountInvalid(账号无效)
	 * @author wm
	 * @date 2019-6-12 上午10:09:40
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward checkUserLoginStatus(ActionMapping mapping,ActionForm form,
			HttpServletRequest request,HttpServletResponse response) throws Exception{
		UserManager um = (UserManager)AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		Integer login_status_dataBase = -1;
		String result = "accountError";//用户账号状态--账号错误(默认)
		Integer userId_local = CommonTools.getFinalInteger("userId", request);
		Integer loginStatus_local = CommonTools.getFinalInteger("loginStatus", request);
		String lastLoginDate_db = "";
		String currDate = CurrentTime.getStringDate();
		if(userId_local > 0 && loginStatus_local > 0){
			List<User> uList = um.listEntityById(userId_local);
			if(uList.size() > 0){
				if(uList.get(0).getAccountStatus().equals(1)){
					lastLoginDate_db = uList.get(0).getLastLoginDate().substring(0, 10);
					Integer diffDays = CurrentTime.compareDate(lastLoginDate_db, currDate);
					if(diffDays > 3){
						result = "sessionLose";//3天无操作
					}else{
						login_status_dataBase = uList.get(0).getLoginStatus();
						if(login_status_dataBase.equals(loginStatus_local)){
							result = "success";//账号正常
						}else{
							result = "loginOut";//账号别处登录
						}
					}
				}else{
					result = "acountLock";//账号被锁定
				}
			}
		}
		Map<String,String> map = new HashMap<String,String>();
		map.put("result", result);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 初始化增加乡镇数据
	 * @author wm
	 * @date 2019-6-21 下午04:45:26
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward initTownData(ActionMapping mapping,ActionForm form,
			HttpServletRequest request,HttpServletResponse response) throws Exception{
		TownManager tm = (TownManager)AppFactory.instance(null).getApp(Constants.WEB_TOWN_INFO);
		File file = new File("d:/new4.json");
		InputStreamReader br = new InputStreamReader(new FileInputStream(file),"utf-8");//读取文件,同时指定编码
		StringBuffer sb = new StringBuffer();
        char[] ch = new char[128];  //一次读取128个字符
        int len = 0;
        while((len = br.read(ch,0, ch.length)) != -1){
            sb.append(ch, 0, len);
        }
        String s = sb.toString();
        if(!s.equals("")){
        	JSONObject dataJson = JSON.parseObject(s); 
            JSONArray features = dataJson.getJSONArray("areaList");// 找到features json数组
            //第一级
            for(int i = 0 ; i < features.size() ; i++){
            	JSONArray features1 = features.getJSONObject(i).getJSONArray("children");
                //第二级
            	for(int j = 0 ; j < features1.size() ; j++){
            		JSONArray features2 = features1.getJSONObject(j).getJSONArray("children");
            		for(int k = 0 ; k < features2.size() ; k++){
            			 //第三级
            			JSONObject obj2 = features2.getJSONObject(k);
            			String countyCode = obj2.getString("code");
            			String countyName = obj2.getString("name");
                        JSONArray features3 = obj2.getJSONArray("children");
                        for(Integer num = 0 ; num < features3.size() ; num++){
                        	JSONObject obj3 = features3.getJSONObject(num);
                        	tm.addInfo(countyCode, countyName, obj3.getString("code"), obj3.getString("name"));
                        }
            		}
            	}
            }
        }
		Map<String,String> map = new HashMap<String,String>();
		map.put("result", "success");
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 根据县编码获取乡镇数据列表
	 * @author wm
	 * @date 2019-6-21 下午05:13:38
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getSpecTownData(ActionMapping mapping,ActionForm form,
			HttpServletRequest request,HttpServletResponse response) throws Exception{
		TownManager tm = (TownManager)AppFactory.instance(null).getApp(Constants.WEB_TOWN_INFO);
		String countyCode = CommonTools.getFinalStr("countyCode", request);
		String msg = "noInfo";
		Map<String,Object> map = new HashMap<String,Object>();
		List<TownInfo> tList = tm.listInfoByCountyCode(countyCode);
		if(tList.size() > 0){
			msg = "success";
			List<Object> list_d = new ArrayList<Object>();
			for(TownInfo t : tList){
				Map<String,String> map_d = new HashMap<String,String>();
				map_d.put("townCode", t.getTownCode());
				map_d.put("townName", t.getTownName());
				list_d.add(map_d);
			}
			map.put("townList", list_d);
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
}