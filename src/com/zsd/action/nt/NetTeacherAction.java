/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.nt;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.action.base.Transcode;
import com.zsd.factory.AppFactory;
import com.zsd.module.NetTeacherBasicInfo;
import com.zsd.module.NetTeacherCertificateInfo;
import com.zsd.module.NetTeacherInfo;
import com.zsd.module.NetTeacherStudent;
import com.zsd.module.NetTeacherTxRecord;
import com.zsd.module.StudentPayOrderInfo;
import com.zsd.module.User;
import com.zsd.page.PageConst;
import com.zsd.service.NetTeacherBasicInfoManager;
import com.zsd.service.NetTeacherInfoManager;
import com.zsd.service.NetTeacherStudentManager;
import com.zsd.service.NetTeacherTxRecordManager;
import com.zsd.service.NtCertificateInfoManager;
import com.zsd.service.StudentPayOrderInfoManager;
import com.zsd.service.UserManager;
import com.zsd.tools.CommonTools;
import com.zsd.util.Constants;

/**
 * MyEclipse Struts Creation date: 05-12-2019
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class NetTeacherAction extends DispatchAction {
	
	/**
	 * 获取网络导师认证信息
	 * @author wm
	 * @date 2019-9-23 上午08:11:53
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getNtCerInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntm = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		NtCertificateInfoManager ntcm = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer loginStatus_local = CommonTools.getFinalInteger("loginStatus", request);
		String checkLoginStatus = CommonTools.checkUserLoginStatus(request,userId,loginStatus_local);
		String iCardStatus = "";
		String zgzStatus = "";
		String xlzStatus = "";
		String iCardNo = "";
		String iCardName = "";
		String iCardBackInfo = "";
		String iCardFrontInfo = "";
		String zgzInfo = "";//教师资格证
		String xlzInfo = "";//教师学历证
		String msg = "error";
		if(checkLoginStatus.equals("success")){
			if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
				List<NetTeacherInfo> ntList = ntm.listntInfoByuserId(userId);
				if(ntList.size() > 0){
					Integer checkStatus_all = ntList.get(0).getCheckStatus();
					Integer ntId = ntList.get(0).getId();
					List<NetTeacherCertificateInfo> ntcList = ntcm.getNtcByTeaId(ntId);
					msg = "success";
					if(ntcList.size() > 0){
						NetTeacherCertificateInfo ntc = ntcList.get(0);
						iCardNo = ntc.getIcardNum();
						iCardName = ntc.getIcardName();
						iCardBackInfo = ntc.getIcardImgBackSmall();
						iCardFrontInfo = ntc.getIcardImgFrontSmall();
						zgzInfo = ntc.getZgzImgSmall();//教师资格证
						xlzInfo = ntc.getXlzImgSmall();//教师学历证
						if(checkStatus_all.equals(0)){//未审核(以/未上传未审核)
							if(!iCardBackInfo.equals("") && !iCardFrontInfo.equals("")){//已经上传未审核
								iCardStatus = "已上传未审核";
							}else{//未上传未审核
								iCardStatus = "未上传";
							}
							if(zgzInfo.equals("")){
								zgzStatus =  "未上传";
							}else{
								zgzStatus =  "已上传未审核";
							}
							if(xlzInfo.equals("")){
								xlzStatus =  "未上传";
							}else{
								xlzStatus =  "已上传未审核";
							}
						}else if(checkStatus_all.equals(1)){//审核未通过(未上传)
							if(!iCardBackInfo.equals("") && !iCardFrontInfo.equals("")){//已经上传
								iCardStatus = "已上传";
								if(ntc.getCheckReasonICard().equals("")){//不通过时才存在
									iCardStatus += "审核通过";
								}else{
									iCardStatus += "审核未通过";
								}
							}else{//未上传未审核
								iCardStatus = "未上传";
							}
							if(zgzInfo.equals("")){
								zgzStatus =  "未上传";
							}else{
								zgzStatus =  "已上传";
								if(ntc.getCheckReasonZgz().equals("")){
									zgzStatus += "审核通过";
								}else{
									zgzStatus += "审核未通过";
								}
							}
							if(xlzInfo.equals("")){
								xlzStatus =  "未上传";
							}else{
								xlzStatus =  "已上传";
								if(ntc.getCheckReasonXlz().equals("")){
									xlzStatus += "审核通过";
								}else{
									xlzStatus += "审核未通过";
								}
							}
						}else{//审核通过
							iCardStatus = "审核通过";
							zgzStatus = "审核通过";
							xlzStatus = "审核通过";
						}
					}else{
						if(checkStatus_all.equals(2)){//未审核(以/未上传未审核)
							iCardStatus = "审核通过";
							zgzStatus = "审核通过";
							xlzStatus = "审核通过";
						}else{
							iCardStatus = "未上传";
							zgzStatus = "未上传";
							xlzStatus = "未上传";
						}
					}
				}
			}
		}else{
			msg = checkLoginStatus;
		}
		Map<String,String> map = new HashMap<String,String>();
		map.put("result", msg);
		if(msg.equals("success")){
			map.put("iCardStatus", iCardStatus);
			map.put("zgzStatus", zgzStatus);
			map.put("xlzStatus", xlzStatus);
			map.put("iCardNo", iCardNo);
			map.put("iCardName", iCardName);
			map.put("iCardFrontImg", iCardFrontInfo);
			map.put("iCardBackImg", iCardBackInfo);
			map.put("zgzImg", zgzInfo);
			map.put("xlzImg", xlzInfo);
		}
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 网络导师的基本信息修改
	 * 
	 * @author zong 2019-5-12上午11:13:36
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward updateNtInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		NetTeacherInfoManager ntInfoManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		UserManager um = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Map<String, String> map = new HashMap<String, String>();
		String msg = "error";
		Integer loginStatus_local = CommonTools.getFinalInteger("loginStatus", request);
		String checkLoginStatus = CommonTools.checkUserLoginStatus(request,userId,loginStatus_local);
		if(checkLoginStatus.equals("success")){
			if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
				List<User> uList = um.listEntityById(userId);
				if(uList.size() > 0){
					List<NetTeacherInfo> ntList = ntInfoManager.listntInfoByTeaId(userId);
					if(ntList.size() > 0){
						Integer ntId = ntList.get(0).getId();
						String realName = Transcode.unescape_new("realName", request);
						String nickName = Transcode.unescape_new("nickName", request);
						String teaSign = Transcode.unescape_new("teaSign", request);
						String teaEdu = Transcode.unescape_new("teaEdu", request);
						String graduateSchool = Transcode.unescape_new("graduateSchool",request);
						String major = Transcode.unescape_new("major", request);
						Integer schoolAge = CommonTools.getFinalInteger("schoolAge", request);
						String sex = CommonTools.getFinalStr("sex", request);
						String birthday = CommonTools.getFinalStr("birthday", request);
						boolean ntFlag = ntInfoManager.updateNtBybasicInfo(ntId, realName,
								nickName, teaSign, teaEdu, graduateSchool, major, schoolAge,
								sex, birthday);
						if (ntFlag) {
							msg = "success";
						} else {
							msg = "fail";
						}
					}
				}
			}
		}else{
			msg = checkLoginStatus;
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}

	/**
	 * 添加网络老师背景资料信息
	 * 
	 * @author zong 2019-5-13上午09:01:55
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addNtbInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		NetTeacherBasicInfoManager ntbManager = (NetTeacherBasicInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_BASIC_INFO);
		NetTeacherInfoManager ntInfoManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		UserManager um = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Map<String, String> map = new HashMap<String, String>();
		String msg = "error";
		if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
			List<User> uList = um.listEntityById(userId);
			if(uList.size() > 0){
				List<NetTeacherInfo> ntList = ntInfoManager.listntInfoByTeaId(userId);
				if(ntList.size() > 0){
					Integer ntId = ntList.get(0).getId();
					String title = Transcode.unescape_new("title", request);//标题
					String dataRange = Transcode.unescape_new("dataRan", request);//时间范围
					String description = Transcode.unescape_new("desc", request); //描述
					Integer type = CommonTools.getFinalInteger("type", request); //类型
					String addData = Transcode.unescape_new1("addData", request); //添加时间
					Integer ntbId = ntbManager.addNtbInfo(ntId, title, dataRange, description, type, addData);
					if(ntbId>0){
						msg = "success";
					}else{
						msg = "fail";
					}
				}
			}
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 保存网络导师的身份信息(姓名,身份证号码,正反面)
	 * @author zong
	 * 2019-5-13下午05:18:30
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward saveICard(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		Integer loginStatus_local = CommonTools.getFinalInteger("loginStatus", request);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		String checkLoginStatus = CommonTools.checkUserLoginStatus(request,userId,loginStatus_local);
		Map<String, String> map = new HashMap<String, String>();
		String msg = "error";
		if(checkLoginStatus.equals("success")){
			NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
			NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
			if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
				List<NetTeacherInfo> ntList = ntManager.listntInfoByuserId(userId);
				if(ntList.size() > 0){
					if(!ntList.get(0).getCheckStatus().equals(2)){//审核通过不能修改
						Integer ntId = ntList.get(0).getId();
						List<NetTeacherCertificateInfo> ntcList = ntcManager.getNtcByTeaId(ntId);
						String icardName = Transcode.unescape_new("icardName", request);//身份证姓名
						String icardNum = Transcode.unescape_new("icardNum", request);//身份证号
						String icardImgFrontBig = ""; //身份证正面大
						String icardImgBackBig = ""; //身份正背面大
						String icardImgFrontSmall = Transcode.unescape_new("icardImgFrontSmall", request); //身份证正面小
						String icardImgBackSmall = Transcode.unescape_new("icardImgBackSmall", request); //身份正背面小
						if(ntcList.size() > 0){//存在网络导师证件信息
							Integer ntcId = ntcList.get(0).getId();
							if(!icardImgFrontSmall.equals("") && !icardImgBackSmall.equals("")){
								icardImgFrontBig = icardImgFrontSmall.replace("_small", "");
								icardImgBackBig = icardImgBackSmall.replace("_small", "");
								boolean ntcFlag = ntcManager.updateNtcInfo(ntcId, icardImgFrontBig, icardImgBackBig, icardImgFrontSmall, icardImgBackSmall, icardName, icardNum, "", "", "", "");
								if(ntcFlag){
									msg = "success";
								}else{
									msg = "fail";
								}
							}
						}else{//不存在导师证件信息
							if(!icardImgFrontSmall.equals("") && !icardImgBackSmall.equals("")){
								icardImgFrontBig = icardImgFrontSmall.replace("_small", "");
								icardImgBackBig = icardImgBackSmall.replace("_small", "");
								Integer ntcId = ntcManager.addNtcInfo(ntId, icardImgFrontBig, icardImgBackBig, icardImgFrontSmall, icardImgBackSmall, icardName, icardNum, "", "", "", "", 0, "", 0, "", "", "", "");
								if(ntcId>0){
									msg = "success";
								}else{
									msg = "fail";
								}
							}
						}
					}
				}
			}
		}else{
			msg = checkLoginStatus;
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 保存学历证
	 * @author zong
	 * 2019-5-14上午11:47:52
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward saveEduCert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer loginStatus_local = CommonTools.getFinalInteger("loginStatus", request);
		String checkLoginStatus = CommonTools.checkUserLoginStatus(request,userId,loginStatus_local);
		Map<String, String> map = new HashMap<String, String>();
		String msg = "error";
		if(checkLoginStatus.equals("success")){
			NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
			NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
			if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
				List<NetTeacherInfo> ntList = ntManager.listntInfoByuserId(userId);
				if(ntList.size() > 0){
					if(!ntList.get(0).getCheckStatus().equals(2)){//审核通过不能修改
						Integer ntId = ntList.get(0).getId();
						List<NetTeacherCertificateInfo> ntcList = ntcManager.getNtcByTeaId(ntId);
						String xlzImgBig = ""; //学历证大
						String xlzImgSmall = Transcode.unescape_new("xlzImgSmall", request); //学历证小
						if(ntcList.size() > 0){//存在网络导师证件信息
							Integer ntcId = ntcList.get(0).getId();
							if(!xlzImgSmall.equals("")){
								xlzImgBig = xlzImgSmall.replace("_small", "");
								boolean   ntcFlag = ntcManager.updateNtcInfo(ntcId, "", "", "", "", "", "", "", "", xlzImgBig, xlzImgSmall);
								if(ntcFlag){
									msg = "success";
								}else{
									msg = "fail";
								}
							}
						}else{
							if(!xlzImgSmall.equals("")){
								xlzImgBig = xlzImgSmall.replace("_small", "");
								Integer ntcId = ntcManager.addNtcInfo(ntId, "", "", "", "", "", "", "", "", xlzImgBig, xlzImgSmall,0, "", 0, "", "", "", "");
								if(ntcId>0){
									msg = "success";
								}else{
									msg = "fail";
								}
							}
						}
					}
				}
			}
		}else{
			msg = checkLoginStatus;
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 保存教师资格证
	 * @author zong
	 * 2019-5-14上午11:48:13
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward saveNtCert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer loginStatus_local = CommonTools.getFinalInteger("loginStatus", request);
		String checkLoginStatus = CommonTools.checkUserLoginStatus(request,userId,loginStatus_local);
		String msg = "error";
		Map<String, String> map = new HashMap<String, String>();
		if(checkLoginStatus.equals("success")){
			NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
			NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
			if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
				List<NetTeacherInfo> ntList = ntManager.listntInfoByuserId(userId);
				if(ntList.size() > 0){
					if(!ntList.get(0).getCheckStatus().equals(2)){//审核通过不能修改
						Integer ntId = ntList.get(0).getId();
						List<NetTeacherCertificateInfo> ntcList = ntcManager.getNtcByTeaId(ntId);
						String zgzImgBig = ""; //学历证大
						String zgzImgSmall = Transcode.unescape_new("zgzImgSmall", request); //学历证小
						if(ntcList.size() > 0){//存在网络导师证件信息
							Integer ntcId = ntcList.get(0).getId();
							if(!zgzImgSmall.equals("")){
								zgzImgBig = zgzImgSmall.replace("_small", "");
								boolean   ntcFlag = ntcManager.updateNtcInfo(ntcId, "", "", "", "", "", "", zgzImgBig, zgzImgSmall, "", "");
								if(ntcFlag){
									msg = "success";
								}else{
									msg = "fail";
								}
							}
						}else{
							if(!zgzImgSmall.equals("")){
								zgzImgBig = zgzImgSmall.replace("_small", "");
								Integer  ntcId = ntcManager.addNtcInfo(ntId, "", "", "", "", "", "",zgzImgBig, zgzImgSmall, "", "",0, "", 0, "", "", "", "");
								if(ntcId>0){
									msg = "success";
								}else{
									msg = "fail";
								}
							}
						}
					}
				}
			}
		}else{
			msg = checkLoginStatus;
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 我的银行卡(网络导师)
	 * @author zong
	 * 2019-5-26上午10:18:46
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward myBankCard(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String, Object> map = new HashMap<String, Object>();
		List<NetTeacherInfo> ntlist = ntManager.listntInfoByuserId(userId);
		String bName =ntlist.get(0).getBankName();
		String bNum = ntlist.get(0).getBankNumber();
		map.put("bankName", bName);//银行名称
		map.put("bankNum", bNum);//银行账号
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 我的账户信息
	 * @author zdf
	 * 2019-9-11 下午05:27:33
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward myAccount(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		UserManager uManager = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		NetTeacherTxRecordManager ntxManager = (NetTeacherTxRecordManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_TX_RECORD);
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String, Object> map = new HashMap<String, Object>();
		List<User> ulist = uManager.listEntityById(userId);
		List<NetTeacherInfo> ntlist = ntManager.listntInfoByuserId(userId);
		Integer ntId = ntlist.get(0).getId();
		List<NetTeacherTxRecord> ntxlist =ntxManager.findnTxReCordByNtId(ntId,0);//等待到账
		List<NetTeacherTxRecord> ntxs =ntxManager.findnTxReCordByNtId(ntId,1);//已到账
		Integer ytxCash=0;
		Integer txCash =0;
		for (Iterator<NetTeacherTxRecord> it = ntxlist.iterator(); it.hasNext();) {
			NetTeacherTxRecord ntx = (NetTeacherTxRecord) it.next();
			 ytxCash+=ntx.getTxMoney();
		}
		for (Iterator<NetTeacherTxRecord> itr = ntxs.iterator(); itr.hasNext();) {
			NetTeacherTxRecord ntxRe = (NetTeacherTxRecord) itr.next();
			txCash+=ntxRe.getTxMoney();
		}
		map.put("ytxCash", ytxCash);//等待到账金额
		map.put("txCash", txCash);//已到账金额
		map.put("accMoney", ulist.get(0).getAccountMoney());//账户余额(可提现)
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	/**
	 * 根据网络导师主键修改网络导师银行卡信息(添加更新银行卡)
	 * @author zong
	 * 2019-5-27上午10:34:03
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addOrUpdateBankCard(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		String bName = Transcode.unescape_new("bankName", request);
		String bNum = CommonTools.getFinalStr("bankNum",request);
		boolean ntFlag=ntManager.updateNtByBankCard(userId, bName, bNum);
		Map<String, String> map = new HashMap<String, String>();
		if(ntFlag){
			map.put("result", "success");
		}else{
			map.put("result", "fail");
		}
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 获取网络导师用户编号的提现记录信息(账单信息)
	 * @author zong
	 * 2019-5-27下午03:40:02
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward listnTxReCord(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherTxRecordManager ntxManager = (NetTeacherTxRecordManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_TX_RECORD);
		Integer operFlag = CommonTools.getFinalInteger("operFlag", request);
		String txDate = CommonTools.getFinalStr("txDate",request);
		Integer userId=CommonTools.getLoginUserId(request);
		Integer count = ntxManager.getnTxReCordCount(userId,txDate,operFlag);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg ="暂无记录";
		if(count>0){
			Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
			Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
			List<NetTeacherTxRecord> ntxlist= ntxManager.listnTxReCordByNtId(userId,txDate,operFlag, pageNo, pageSize);
			List<Object> list_d = new ArrayList<Object>();
			for (Iterator<NetTeacherTxRecord> itr = ntxlist.iterator(); itr.hasNext();) {
				NetTeacherTxRecord ntx = (NetTeacherTxRecord) itr.next();
				Map<String,Object> map_d = new HashMap<String,Object>();
				map_d.put("id", ntx.getId());
				if(ntx.getOperateUserId().equals(-1)){
					map_d.put("ntxName", "返现");
				}else{
					if(ntx.getOperateUserId().equals(0)){
						map_d.put("opersta", "等待打款");
					}else{
						map_d.put("opersta", "已打款");
					}
					map_d.put("ntxName", "提现");
				}
				map_d.put("txMoney", ntx.getTxMoney());
				map_d.put("txDate", ntx.getTxDate());
				list_d.add(map_d);
			}
			map.put("data", list_d);
			map.put("count", count);
			map.put("code", 0);
			msg = "success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 账单信息详情
	 * @author zdf
	 * 2019-9-11 下午03:56:54
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward nTxRecordDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherTxRecordManager ntxManager = (NetTeacherTxRecordManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_TX_RECORD);
		UserManager uManager = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		Integer Id = CommonTools.getFinalInteger("ntxId", request);
		List<NetTeacherTxRecord> ntxList = ntxManager.listnTxReCordById(Id);
		Map<String, Object> map = new HashMap<String, Object>();
		List<Object> list_d = new ArrayList<Object>();
		for (Iterator<NetTeacherTxRecord> iterator = ntxList.iterator(); iterator.hasNext();) {
			NetTeacherTxRecord ntx = (NetTeacherTxRecord) iterator.next();
			Map<String, Object> map_d = new HashMap<String, Object>();
			if(ntx.getOperateUserId().equals(-1)){
//				 List<User> ulist = uManager.listEntityById(ntx.getStuId());
//				 String reMark = "学生"+ulist.get(0).getRealName()+"绑定费返现";
				 map_d.put("ntxTitle", "返现");	
				 map_d.put("txMoney", ntx.getTxMoney());
				 map_d.put("txDate", ntx.getTxDate());
				 map_d.put("reMark", ntx.getRemark());
			}else if(ntx.getOperateUserId()>=0){
				 map_d.put("ntxTitle", "提现");	
				 map_d.put("txMoney", ntx.getTxMoney());
				 map_d.put("txDate", ntx.getTxDate());
				 map_d.put("bankName", ntx.getBankName());
				 map_d.put("bankNo", ntx.getBankNo());
				 String operUser="";
				 if(ntx.getOperateUserId()>0){
					 List<User> ulist = uManager.listEntityById(ntx.getOperateUserId());
					 operUser =ulist.get(0).getRealName() ;
					 map_d.put("operUser", operUser); 
					 map_d.put("operDate", ntx.getOperateDate());
					 map_d.put("opersta", "已打款");
				 }else{
					 map_d.put("operUser", operUser);  
					 map_d.put("operDate", "");
					 map_d.put("opersta", "等待打款");
				 }
				
			}
			list_d.add(map_d);
		}
		map.put("data", list_d);
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	
	/**
	 * 获取学生的购买订单信息
	 * @author zong
	 * 2019-5-27下午04:53:21
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward listStuPayOrder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		StudentPayOrderInfoManager sOrdeManager = (StudentPayOrderInfoManager) AppFactory.instance(null).getApp(Constants.WEB_STUDENT_PAY_ORDER_INFO);
		NetTeacherStudentManager ntsManager = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String, Object> map = new HashMap<String, Object>();
		List<NetTeacherInfo> ntlist = ntManager.listntInfoByuserId(userId);
		Integer ntId = ntlist.get(0).getId();
		List<NetTeacherStudent> ntslist=ntsManager.listNtsByNtId(ntId, 1);
		List<Object> list_d = new ArrayList<Object>();
		String  msg = "暂无记录";
		Integer count =0;
		if(!ntslist.isEmpty()){
			for (Iterator<NetTeacherStudent> iter = ntslist.iterator(); iter.hasNext();) {
				NetTeacherStudent nts = (NetTeacherStudent) iter.next();
				 Integer ntsId = nts.getId();
				 count = sOrdeManager.getspOrderInfoCount(ntsId);
				 if(count>0){
					 msg="success";
					 Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
					 Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
					 List<StudentPayOrderInfo> sordeList = sOrdeManager.listSpayOrderInfoByOpt(ntsId, pageNo, pageSize);
						for (Iterator<StudentPayOrderInfo> itrs = sordeList.iterator(); itrs.hasNext();) {
							StudentPayOrderInfo sorder = (StudentPayOrderInfo) itrs.next();
							Map<String,Object> map_d = new HashMap<String,Object>();
							map_d.put("stuName", sorder.getUser().getRealName());
							map_d.put("payDate", sorder.getAddDate());
							map_d.put("payMoney", sorder.getPayMoney());
							map_d.put("endDate", sorder.getEndDate());
							list_d.add(map_d);
						}
				 }
			}
			map.put("data", list_d);
			map.put("count", count);
			map.put("code", 0);
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}

	/**
	 * 获取班级成员列表(我的班级)
	 * @author zong
	 * 2019-5-31下午03:59:27
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward listUserClass(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherStudentManager ntsManager = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		List<NetTeacherInfo> ntlist = ntManager.listntInfoByuserId(userId);
		Integer ntId = ntlist.get(0).getId();
		Integer paySta=CommonTools.getFinalInteger("paySta", request);
		Integer bindFlag= CommonTools.getFinalInteger("bindFlag", request);
		String stuName=Transcode.unescape_new("stuName", request);
		Integer count = ntsManager.getNtsBystunameOrBindSta(ntId, paySta, bindFlag, stuName);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg ="暂无记录";
		if(count>0){
			Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
			Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
			List<NetTeacherStudent> ntslist = ntsManager.listNTByStuNameOrBindSta(ntId, paySta, bindFlag, stuName, pageNo, pageSize);
			List<Object> list_d = new ArrayList<Object>();
			for (Iterator<NetTeacherStudent> itr = ntslist.iterator(); itr.hasNext();) {
				NetTeacherStudent nts = (NetTeacherStudent) itr.next();
				Map<String,Object> map_d = new HashMap<String,Object>();
				map_d.put("id", nts.getId());
				map_d.put("stuNmae", nts.getUser().getRealName());
				map_d.put("sectDate", nts.getBindDate()+"至"+nts.getEndDate());
				Integer paysta = nts.getPayStatus();
				if(paysta.equals(-1)){
					map_d.put("payVal", "免费试用");
				}else if(paysta.equals(1)){
					map_d.put("payVal", "付费");
				}else if(paysta.equals(0)){
					map_d.put("payVal", "取消");
				}else{
					map_d.put("payVal", "免费");
				}
				list_d.add(map_d);
			}
			map.put("data", list_d);
			map.put("count", count);
			map.put("code", 0);
			msg = "success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 获取班级基本信息(我的班级)
	 * @author zong
	 * 2019-5-31下午05:03:05
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getClassInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherStudentManager ntsManager = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String,Object> map = new HashMap<String,Object>();
		List<NetTeacherInfo> ntlist = ntManager.listntInfoByuserId(userId);
		NetTeacherInfo ntInfo = ntlist.get(0);
		Integer ntId = ntInfo.getId();
		Integer trialNum = ntsManager.getByStuNum(ntId, -1);//免费试用人员
		Integer freeNum = ntsManager.getByStuNum(ntId, 2);//免费人员
		Integer payNum = ntsManager.getByStuNum(ntId, 1);//付费人员
		String schType ="";
		if(ntInfo.getSchoolType()==1){
			schType="小学";
		}else if(ntInfo.getSchoolType()==2){
			schType="初中";
		}else if(ntInfo.getSchoolType()==3){
			schType="高中";
		}
		map.put("subName", schType+ntInfo.getSubject().getSubName());
		map.put("bmoney", ntInfo.getBaseMoney());
		map.put("trialNum", trialNum);
		map.put("freeNum", freeNum);
		map.put("payNum", payNum);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 网络导师个人中心
	 * @author zong
	 * 2019-6-5下午03:39:21
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getNtperCenter(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		NetTeacherBasicInfoManager ntbManager = (NetTeacherBasicInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_BASIC_INFO);
		NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String,Object> map = new HashMap<String,Object>();
		List<NetTeacherInfo> ntlist = ntManager.listntInfoByuserId(userId);
		NetTeacherInfo ntInfo = ntlist.get(0);
		Integer ntId = ntInfo.getId();
		map.put("ntId", ntId);
		map.put("realName", ntInfo.getUser().getRealName());
		map.put("nickName", ntInfo.getUser().getNickName());
		map.put("teaSign", ntInfo.getTeaSign());
		map.put("teaEdu", ntInfo.getTeaEdu());
		map.put("graduateSchool", ntInfo.getGraduateSchool());
		map.put("major", ntInfo.getMajor());
		map.put("schoolAge", ntInfo.getSchoolAge());
		map.put("sex", ntInfo.getUser().getSex());
		map.put("birtthday", ntInfo.getUser().getBirthday());
		map.put("lastLoginDate", ntInfo.getUser().getLastLoginDate());
		map.put("lastLoginIp", ntInfo.getUser().getLastLoginIp());
		map.put("email", ntInfo.getUser().getEmail());
		map.put("mobile", ntInfo.getUser().getMobile());
		
		List<Object> list_ntb = new ArrayList<Object>();
		List<NetTeacherBasicInfo> ntblist = ntbManager.listNtbByTeaId(ntId);
		for (Iterator<NetTeacherBasicInfo> itr = ntblist.iterator(); itr.hasNext();) {
			NetTeacherBasicInfo ntbInfo = (NetTeacherBasicInfo) itr.next();
			Map<String,Object> map_ntb = new HashMap<String,Object>();
			map_ntb.put("ntbId", ntbInfo.getId());
			map_ntb.put("title", ntbInfo.getTitle());
			map_ntb.put("dataRange", ntbInfo.getDataRange());
			map_ntb.put("description", ntbInfo.getDescription());
			map_ntb.put("type", ntbInfo.getType());
			map_ntb.put("addDate", ntbInfo.getAddData());
			
			list_ntb.add(map_ntb);
		}
		map.put("list_ntb", list_ntb);
		
		List<Object> list_ntc = new ArrayList<Object>();
		List<NetTeacherCertificateInfo> ntclist = ntcManager.getNtcByTeaId(ntId);
		for (Iterator<NetTeacherCertificateInfo> ittr = ntclist.iterator(); ittr.hasNext();) {
			NetTeacherCertificateInfo ntcInfo = (NetTeacherCertificateInfo) ittr.next();
			Map<String,Object> map_ntc = new HashMap<String,Object>();
			map_ntc.put("ntcId", ntcInfo.getId());
			map_ntc.put("icName", ntcInfo.getIcardName());
			map_ntc.put("icNum", ntcInfo.getIcardNum());
			map_ntc.put("icImgFrontBig", ntcInfo.getIcardImgFrontBig());
			map_ntc.put("icImgFrontSmall", ntcInfo.getIcardImgFrontSmall());
			map_ntc.put("icImgBackBig", ntcInfo.getIcardImgBackBig());
			map_ntc.put("icImgBackSmall", ntcInfo.getIcardImgBackSmall());
			map_ntc.put("zgzImgBig", ntcInfo.getZgzImgBig());
			map_ntc.put("zgzImgSmall", ntcInfo.getZgzImgSmall());
			map_ntc.put("xlzImgBig", ntcInfo.getXlzImgBig());
			map_ntc.put("xlzImgSmall", ntcInfo.getXlzImgSmall());
			
			list_ntc.add(map_ntc);
		}
		map.put("list_ntc", list_ntc);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 导师获取绑定的学生(我的学生)
	 * @author zdf
	 * 2019-9-16 上午10:30:37
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getBindStu(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		NetTeacherStudentManager  ntsManager = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer bindStatus = CommonTools.getFinalInteger("bindStatus", request);
		Integer count = ntsManager.getNTByntIdCount(userId, bindStatus);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg ="暂无记录";
		if(count>0){
			Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
			Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
			List<NetTeacherStudent> ntsList = ntsManager.listNTByntId(userId,bindStatus,pageNo,pageSize);
			List<Object> list_d = new ArrayList<Object>();
			for (Iterator<NetTeacherStudent> iterator = ntsList.iterator(); iterator.hasNext();) {
				NetTeacherStudent nts = (NetTeacherStudent) iterator.next();
				Map<String,Object> map_d = new HashMap<String,Object>();
				map_d.put("stuName", nts.getUser().getRealName()); //学生真实姓名
				map_d.put("stuProtrait", nts.getUser().getPortrait());//头像
				map_d.put("bindStatus", nts.getBindStatus());//绑定状态
				map_d.put("bindDate", nts.getBindDate());//绑定时间
				map_d.put("endDate", nts.getEndDate());//结束时间
				
				list_d.add(map_d);
			}
		   map.put("data", list_d);
		   map.put("count", count);
		   msg = "success";
		}
		map.put("msg", msg);
	   CommonTools.getJsonPkg(map, response);	
	   return null;
		
	}
	
	/**
	 * 增加网络导师提现
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addTX(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		UserManager um = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		NetTeacherTxRecordManager txm = (NetTeacherTxRecordManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_TX_RECORD);
		NetTeacherInfoManager ntm = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer txFee = CommonTools.getFinalInteger("txFee", request);
		Map<String,String> map = new HashMap<String, String>();
		String msg = "error";
		if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID) && txFee >= 100){
			List<User> uList = um.listEntityById(userId);
			if(uList.size() > 0){
				Integer accMoney = uList.get(0).getAccountMoney();
				if(accMoney >= txFee){
					List<NetTeacherInfo> ntList = ntm.listntInfoByuserId(userId);
					if(ntList.size() > 0){
						NetTeacherInfo nt = ntList.get(0);
						String bankName = nt.getBankName();
						String bankNo = nt.getBankNumber();
						if(!bankName.equals("") && !bankNo.equals("")){
							Integer txId = txm.addTX(0, nt.getId(), txFee, bankName, bankNo, 0, "");
							if(txId > 0){
								//修改用户账户余额
								um.updateUser(userId, 0, 0, 0, -txFee);
								msg = "success";
							}
						}else{
							msg = "bankNull";
						}
					}
				}else{
					msg = "feeError";
				}
			}
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	/**
	 * 判断网络导师是否审核通过
	 * @author zdf
	 * 2019-9-19 下午03:18:16
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward checkNtVerify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer userId = CommonTools.getLoginUserId(request);
		List<NetTeacherInfo> ntList = ntManager.listntInfoByuserId(userId);
		Integer checkSta= ntList.get(0).getCheckStatus();
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("checkSta", checkSta);// 0:未审核,1:审核不通过,2:审核通过
		CommonTools.getJsonPkg(map, response);
		return null; 
	}
}