/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.nt;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.action.base.Transcode;
import com.zsd.factory.AppFactory;
import com.zsd.module.NetTeacherCertificateInfo;
import com.zsd.module.NetTeacherInfo;
import com.zsd.page.PageConst;
import com.zsd.service.NetTeacherInfoManager;
import com.zsd.service.NtCertificateInfoManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 05-16-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NetteacherReviewAction extends DispatchAction {
	/**
	 * 导向网路导师审核页面
	 * @author zong
	 * 2019-6-6上午11:14:54
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward goNtReviewPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		return mapping.findForward("reviewPage");
	}

	/**
	 * 根据条件获取网络导师证件审核信息
	 * @author zong
	 * 2019-5-16下午03:26:04
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * String accName, String realName, Integer checkSta, String sDate,String eDate, Integer pageNo,
			Integer pageSize
	 */
	public ActionForward getNtcReviewList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
		Integer checkSta = CommonTools.getFinalInteger("checkSta", request);//审核状态
		String accName = Transcode.unescape_new("accName", request);//账户名
		String realName = Transcode.unescape_new("realName", request);//真实姓名
		String sDate = Transcode.unescape_new("sDate", request);//注册时间(开始)
		String eDate = Transcode.unescape_new("eDate", request);//注册时间(结束)
		Integer ntCount = ntManager.getNtByOptionCount(accName, realName, checkSta, sDate, eDate);
		String msg = "暂无记录";
		Map<String,Object> map = new HashMap<String,Object>();
		if(ntCount>0){
			Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
			Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
			List<NetTeacherInfo> ntList = ntManager.listNtByOption(accName, realName, checkSta, sDate, eDate, pageNo, pageSize);
			List<Object> list = new ArrayList<Object>();
			for(Iterator<NetTeacherInfo> it = ntList.iterator() ; it.hasNext();){
				NetTeacherInfo ntInfo = it.next();
				Map<String,Object> map_nt = new HashMap<String,Object>();
				map_nt.put("accName", ntInfo.getUser().getUserAccount());
				map_nt.put("realName", ntInfo.getUser().getRealName());
				map_nt.put("sex", ntInfo.getUser().getSex());
				map_nt.put("mobile", ntInfo.getUser().getMobile());
				map_nt.put("subName", ntInfo.getSubject().getSubName());
				map_nt.put("lastLoginDate", ntInfo.getUser().getLastLoginDate());
				List<NetTeacherCertificateInfo> ntcList = ntcManager.getNtcByTeaId(ntInfo.getId());
				NetTeacherCertificateInfo ntcInfo = null;
				Integer ntcId=0;
				if(!ntcList.isEmpty()){
					 ntcInfo = ntcList.get(0);
					 ntcId = ntcInfo.getId();
					if(!ntcInfo.getIcardImgFrontBig().equals("")&& !ntcInfo.getIcardImgFrontSmall().equals("")&& !ntcInfo.getZgzImgSmall().equals("")&& !ntcInfo.getZgzImgBig().equals("")&& !ntcInfo.getXlzImgSmall().equals("")&& !ntcInfo.getXlzImgBig().equals("")){
						map_nt.put("certSta", "齐全");	
					}else if(!ntcInfo.getIcardImgFrontBig().equals("")|| !ntcInfo.getIcardImgFrontSmall().equals("")|| !ntcInfo.getZgzImgSmall().equals("")||!ntcInfo.getZgzImgBig().equals("")|| !ntcInfo.getXlzImgSmall().equals("")|| !ntcInfo.getXlzImgBig().equals("")){
						map_nt.put("certSta", "不全");
					}
					
				}else{
					map_nt.put("certSta", "暂无");
				}
				map_nt.put("ntcId",ntcId );
				if(ntInfo.getCheckStatus()==0){
					map_nt.put("checkSta", "未审核");
				}else if(ntInfo.getCheckStatus()==1){
					map_nt.put("checkSta","未通过");
				}else if(ntInfo.getCheckStatus()==2){
					map_nt.put("checkSta","通过");
				}
				list.add(map_nt);
			}
			map.put("data", list);
			map.put("count", ntCount);
			map.put("code", 0);
			msg = "success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 根据主键获取网络导师证件信息
	 * @author zong
	 * 2019-5-18上午10:36:00
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getNtCertById(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
		Integer id = CommonTools.getFinalInteger("id", request);//网络导师证件主键
		List<NetTeacherCertificateInfo> ntcList  = ntcManager.listEntityByid(id);
		String msg = "暂无记录";
		Map<String,Object> map = new HashMap<String,Object>();
		if(!ntcList.isEmpty()){
			msg = "success";
			NetTeacherCertificateInfo ntc = ntcList.get(0);
			map.put("id", ntc.getId());
			map.put("ntId", ntc.getNetTeacherInfo().getId());
			map.put("icardImgFrontBig", ntc.getIcardImgFrontBig());
			map.put("icardImgFrontSmall", ntc.getIcardImgFrontSmall());
			map.put("icardImgBackBig", ntc.getIcardImgBackBig());
			map.put("icardImgBackSmall", ntc.getIcardImgBackSmall());
			map.put("icardName", ntc.getIcardName());
			map.put("icardNum", ntc.getIcardNum());
			map.put("zgzImgBig", ntc.getZgzImgBig());
			map.put("zgzImgSmall", ntc.getZgzImgSmall());
			map.put("xlzImgBig", ntc.getXlzImgBig());
			map.put("xlzImgSmall", ntc.getXlzImgSmall());
			map.put("checkReasonICard", ntc.getCheckReasonICard());
			map.put("checkReasonZgz", ntc.getCheckReasonZgz());
			map.put("checkReasonXlz", ntc.getCheckReasonXlz());
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 修改网络导师证件审核状态
	 * @author zong
	 * 2019-5-18上午10:02:09
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward updateReview(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		NtCertificateInfoManager ntcManager = (NtCertificateInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_CERTIFICATE_INFO);
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		Integer ntId = CommonTools.getFinalInteger("ntId", request);//网络导师主键
		Integer id = CommonTools.getFinalInteger("id", request);//网络导师证件主键
		Integer checkUserId=(Integer) request.getSession().getAttribute("userId");
		String checkUserAccount=(String) request.getSession().getAttribute("userAcc");
		String checkICard = Transcode.unescape_new("checkICard", request);//身份证审核状态
		String checkZgz = Transcode.unescape_new("checkZgz", request);//资格证审核状态
		String checkXlz = Transcode.unescape_new("checkXlz", request);//学历证审核状态
		String checkTime=CurrentTime.getCurrentTime();//当前时间
		
		Integer checkStatus=0;
		if(checkICard.replace(" ", "").equalsIgnoreCase("notpass")||checkZgz.replace(" ", "").equalsIgnoreCase("notpass")||checkXlz.replace(" ", "").equalsIgnoreCase("notpass")){
			checkStatus =1;
		}else if(checkICard.replace(" ", "").equalsIgnoreCase("pass")&&checkZgz.replace(" ", "").equalsIgnoreCase("pass")&&checkXlz.replace(" ", "").equalsIgnoreCase("pass")){
			checkStatus =2;
		}
		boolean ntcFlag = ntcManager.updateNtcByCheck(id, checkUserId, checkUserAccount, checkStatus, checkTime, checkICard, checkZgz, checkXlz);
		boolean ntFlag = false;
		if(ntcFlag){
		  ntFlag =ntManager.updateNtInfoByCheckSta(ntId, checkStatus);
		}
		Map<String, String> map = new HashMap<String, String>();
		if (ntFlag) {
			map.put("result", "success");
		} else {
			map.put("result", "fail");
		}
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}