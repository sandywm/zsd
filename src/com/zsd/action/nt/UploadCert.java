/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.nt;

import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.RequestContext;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.fileupload.servlet.ServletRequestContext;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zsd.tools.CheckImage;
import com.zsd.tools.CommonTools;
import com.zsd.tools.Upload;
import com.zsd.util.WebUrl;

/** 
 * MyEclipse Struts
 * Creation date: 05-15-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class UploadCert extends Action {
	
	/** 
	 * 网络导师个人中心图片上传
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward execute(ActionMapping mapping,ActionForm form,
			HttpServletRequest request,HttpServletResponse response)throws Exception{
		Map<String,Object> map = new HashMap<String,Object>();
		RequestContext ctx = new ServletRequestContext(request);
		DiskFileItemFactory factory = new DiskFileItemFactory();
		factory.setSizeThreshold(2048*1024);
		ServletFileUpload sfUpload = new ServletFileUpload(factory);
		
		List formList = sfUpload.parseRequest(ctx);
		Iterator<Object> formItem = formList.iterator();
		
		String userPath = WebUrl.PERSONAL_HONOR;
		String imagePath = null;
		while(formItem.hasNext()){
			FileItem item = (FileItem)formItem.next();
			if(item.isFormField()){
				System.out.println("Field Name:"+item.getFieldName());
			}else {
				String fileName = item.getName().substring(item.getName().lastIndexOf("\\")+1);
				if(fileName!=""){
					Integer lastIndex = fileName.lastIndexOf(".");
					if(lastIndex < 0){//没有文件格式
						imagePath = "0";
						map.put("imagePath", imagePath);
						map.put("zoomImagePath", imagePath);
						CommonTools.getJsonPkg(map, response);
					}else{
//							String filePreName = fileName.substring(0, lastIndex);
						String suffix = fileName.substring(lastIndex);
						CheckImage ci = new CheckImage();
						if(!ci.checkImageStuffix(suffix)){
							imagePath = "0";
							map.put("imagePath", imagePath);
							map.put("zoomImagePath", imagePath);
							CommonTools.getJsonPkg(map, response);
						}
						if(!ci.checkItemSize(item, 5242880)){
							imagePath = "1";
							map.put("imagePath", imagePath);
							map.put("zoomImagePath", imagePath);
							CommonTools.getJsonPkg(map, response);
						}
						String fName = null;
						Upload upload = new Upload();
						//执行上传文件
						fName = upload.uploadItem(item, userPath, suffix);
						if(fName!=null){
							String filePath = WebUrl.PERSONAL_HONOR + "\\" + fName;
							File file = new File(filePath);
							imagePath = WebUrl.NEW_PERSONAL_HONOR + upload.makeImage(userPath+"\\"+fName, 130, -1, upload.makeNewUrl(userPath, suffix, "_zoom"), suffix.substring(1))+"_zoom"+suffix;
							
							map.put("imagePath", filePath);
							map.put("zoomImagePath", imagePath);
							CommonTools.getJsonPkg(map, response);
						}else {
							imagePath = "2";
							map.put("imagePath", imagePath);
							map.put("zoomImagePath", imagePath);
							CommonTools.getJsonPkg(map, response);
						}
					}
				}
			}
		}
		return null;
	}
}