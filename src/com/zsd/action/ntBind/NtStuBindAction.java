/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.ntBind;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.factory.AppFactory;
import com.zsd.module.NetTeacherInfo;
import com.zsd.module.NetTeacherStudent;
import com.zsd.module.School;
import com.zsd.module.User;
import com.zsd.service.NetTeacherInfoManager;
import com.zsd.service.NetTeacherStudentManager;
import com.zsd.service.SchoolManager;
import com.zsd.service.UserManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 10-11-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NtStuBindAction extends DispatchAction {
	
	/**
	 * 免费试用绑定网络导师
	 * @author wm
	 * @date 2019-10-11 上午09:46:47
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward ntsFreeBind(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		NetTeacherStudentManager ntsm = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		NetTeacherInfoManager ntm = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		UserManager um = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		SchoolManager sm = (SchoolManager) AppFactory.instance(null).getApp(Constants.WEB_SCHOOL_INFO);
		Integer stuId = CommonTools.getLoginRoleId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer ntId = CommonTools.getFinalInteger("ntId", request);
		String currDate = CurrentTime.getStringDate();
		Map<String,String> map = new HashMap<String,String>();
		String msg = "error";
		if(stuId > 0 && roleId.equals(Constants.STU_ROLE_ID) && ntId > 0){
			List<User> uList = um.listEntityById(stuId);
			if(uList.size() > 0){
				Integer schoolId = uList.get(0).getSchoolId();//获取学生所在的学校
				List<School> sList = sm.listInfoById(schoolId);
				if(sList.size() > 0){
					Integer stuSchoolType = sList.get(0).getSchoolType();
					List<NetTeacherInfo>  ntList = ntm.listntInfoByTeaId(ntId);
					if(ntList.size() > 0){
						NetTeacherInfo nt = ntList.get(0);
						if(nt.getCheckStatus().equals(2)){
							Integer subId = nt.getSubject().getId();
							Integer ntSchoolType = nt.getSchoolType();
							if(stuSchoolType.equals(ntSchoolType)){
								if(ntsm.listAllInfoByOpt(stuId, subId).size() == 0){//免费试用绑定
									ntsm.addNTS(stuId, ntId, currDate, -1, CurrentTime.getFinalDate(6), 0, "", "", 0);
									msg = "success";
								}
							}else{
								msg = "paraDiff";//学段不一致
							}
						}else{
							msg = "checkFail";//该导师没有审核通过
						}
					}
				}
			}
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 绑定网络导师--针对后台操作人员设置修改延长绑定时间--只针对免费试用、免费绑定
	 * @author wm
	 * @date 2019-10-11 上午10:05:22
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward upBind(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		NetTeacherStudentManager ntsm = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		SchoolManager sm = (SchoolManager) AppFactory.instance(null).getApp(Constants.WEB_SCHOOL_INFO);
		Integer currUserId = CommonTools.getLoginRoleId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer ntsId = CommonTools.getFinalInteger("ntsId", request);
		String bindDate = CommonTools.getFinalStr("bindDate", request);
		Map<String,String> map = new HashMap<String,String>();
		String msg = "error";
		if(currUserId > 0 && ntsId > 0 && roleId.equals(Constants.SUPER_ROLE_ID)){
			NetTeacherStudent nts = ntsm.getEntityById(ntsId);
			if(!nts.getBindStatus().equals(1) || nts.getClearStatus().equals(1)){//不能修改付费绑定的信息和升学清除的信息
				User stu = nts.getUser();
				NetTeacherInfo nt = nts.getNetTeacherInfo();
				Integer stuId = stu.getId();
				Integer ntId = nt.getId();
				List<School> sList = sm.listInfoById(stu.getSchoolId());
				if(sList.size() > 0){
					Integer stuSchoolType = sList.get(0).getSchoolType();
					if(nt.getCheckStatus().equals(2)){
						Integer ntSchoolType = nt.getSchoolType();
						if(stuSchoolType.equals(ntSchoolType)){
							//存在其他绑定时不能修改
							NetTeacherStudent nts_bind = ntsm.getValidInfoByOpt(stuId, nt.getSubject().getId());//获取正在绑定的信息（免费试用，免费绑定，付费绑定）
							if(nts_bind != null){//存在该科正在绑定的导师
								if(nts_bind.getNetTeacherInfo().getId().equals(ntId)){
									//可以修改当前记录
									//延长或缩短期限
									ntsm.updateInfoById(ntsId, nts.getBindDate(), nts.getBindStatus(), bindDate, 0);
									msg = "success";
								}else{
									//存在当前学科其他老师的有效绑定，不能修改当前记录
									msg = "notUpdate";
								}
							}else{//绑定被取消或者到期,不存在有效绑定的导师
								//延长或缩短期限并设置绑定状态为免费试用
								ntsm.updateInfoById(ntsId, nts.getBindDate(), -1, bindDate, 0);
								msg = "success";
							}
						}else{
							msg = "paraDiff";//学段不一致
						}
					}else{
						msg = "checkFail";//该导师没有审核通过
					}
				}
			}else{
				msg = "notModify";//付费绑定和已升学清除信息不能修改
			}
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}