/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.club;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.action.base.Transcode;
import com.zsd.factory.AppFactory;
import com.zsd.module.ParentClubInfo;
import com.zsd.module.ParentClubRelationInfo;
import com.zsd.module.User;
import com.zsd.service.ParentClubManager;
import com.zsd.service.ParentClubRelationManager;
import com.zsd.service.UserManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 09-28-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ParentClubAction extends DispatchAction {
	/**
	 * 更新家长群基本信息
	 * @author zdf
	 * 2019-9-28 上午08:29:55
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward updateParentClub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ParentClubManager pcManager = (ParentClubManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB);
		Integer id=CommonTools.getFinalInteger("pclubId", request);
		String clubName =Transcode.unescape_new("clubName",request);
		String clubProfile =Transcode.unescape_new("clubProfile",request);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg = "fail";
		boolean flag = pcManager.updateParentClub(id, clubName, clubProfile);
		if(flag){
			msg ="success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 根据用户编号获取家长群信息
	 * @author zdf
	 * 2019-9-28 上午08:31:10
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getParentClub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ParentClubRelationManager pcrManager = (ParentClubRelationManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB_RELATION);
		ParentClubManager pcManager = (ParentClubManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB);
		UserManager uManager = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);;
		Map<String,Object> map = new HashMap<String,Object>();
		List<Object> list_d = new ArrayList<Object>();
		List<ParentClubInfo> pClublist= pcManager.listParentClubByuId(userId);
		String msg="error";
		if(pClublist.isEmpty()){
			msg="noInfo";
		}else{
			ParentClubInfo pClub = pClublist.get(0);
			map.put("id", pClub.getId());
			map.put("clubName", pClub.getClubName());
			map.put("clubCode", pClub.getClubCode());
			map.put("clubProfile", pClub.getClubProfile());
			List<ParentClubRelationInfo> pcrlist = pcrManager.listInfoByParentCludId(pClub.getId());
			for (Iterator<ParentClubRelationInfo> itr = pcrlist.iterator(); itr.hasNext();) {
				ParentClubRelationInfo pcrInfo = (ParentClubRelationInfo) itr.next();
				Map<String,Object> map_d= new HashMap<String,Object>();
				Integer jzId = pcrInfo.getUser().getId();
				List<User> jzlist = uManager.listEntityById(jzId);
				if(jzlist.size() > 0){
					User user =  jzlist.get(0);
					map_d.put("jzName",user.getRealName());
					map_d.put("jzPortrait", user.getPortrait());
					list_d.add(map_d);
				}
			}
			map.put("pClubInfo", list_d);
			msg="success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 获取其他家长群信息
	 * @author zdf
	 * 2019-9-28 上午09:06:37
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getOtherPClub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ParentClubRelationManager pcrManager = (ParentClubRelationManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB_RELATION);
		UserManager uManager = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg = "error";
		List<Object> list_d = new ArrayList<Object>();
		if(userId > 0){
				//获取我加入的工作室列表
			    List<ParentClubRelationInfo> pcrlists =pcrManager.listInfoByParentCludId(userId);
			    if(pcrlists.isEmpty()){
			    	msg = "noInfo";
			    }else{
			    	msg = "success";
			    	ParentClubRelationInfo pcrInfo = pcrlists.get(0);
			    	map.put("id",pcrInfo.getParentClubInfo().getId());//家长群主键
					map.put("clubName",pcrInfo.getParentClubInfo().getClubName());//家长群名
					map.put("clubCode", pcrInfo.getParentClubInfo().getClubCode());//家长群邀请码
					map.put("clubProfile", pcrInfo.getParentClubInfo().getClubProfile());//家长群简介
					//获取家长群列表
					List<ParentClubRelationInfo> pcrlist = pcrManager.listInfoByParentCludId(pcrInfo.getParentClubInfo().getId());
					for (Iterator<ParentClubRelationInfo> itr = pcrlist.iterator(); itr.hasNext();) {
						ParentClubRelationInfo pcrInfos = (ParentClubRelationInfo) itr.next();
						Map<String,Object> map_d= new HashMap<String,Object>();
						Integer jzId = pcrInfos.getUser().getId();
						List<User> jzlist = uManager.listEntityById(jzId);
						if(jzlist.size() > 0){
							User user = jzlist.get(0);
							map_d.put("jzName",user.getRealName());
							map_d.put("jzPortrait", user.getPortrait());
							list_d.add(map_d);
						}
					}
			    }
			}
		map.put("msg", msg);
		map.put("pClubInfo", list_d);
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	/**
	 * 判断是否加入家长群(通过用户编号)
	 * @author zdf
	 * 2019-9-5 上午11:31:08
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward checkOtherStudio(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ParentClubRelationManager pcrManager = (ParentClubRelationManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB_RELATION);
		Integer userId=CommonTools.getLoginUserId(request);
	    List<ParentClubRelationInfo> pcrlists = pcrManager.listInfoByUserId(userId);
	    boolean flag = false;
	    Map<String,Object> map = new HashMap<String,Object>();
	    if(pcrlists.isEmpty()){
	    	flag = true;
	    }
	    map.put("msg", flag);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	
	/**
	 * 通过家长群邀请码加入家长群
	 * @author zdf
	 * 2019-9-28 上午10:02:16
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addPClubRelation(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ParentClubRelationManager pcrManager = (ParentClubRelationManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB_RELATION);
		ParentClubManager pcManager = (ParentClubManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB);
		String clubCode =CommonTools.getFinalStr("clubCode",request);
		Integer userId=CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		String msg = "fail";
		Map<String,Object> map = new HashMap<String,Object>();
		if(userId > 0 && roleId.equals(Constants.PATENT_ROLE_ID) && !clubCode.equals("")){
			clubCode = clubCode.toUpperCase();
			List<ParentClubInfo> pclist = pcManager.listParentClubByClubCode(clubCode);
			if(pclist.size() > 0){
				Integer  pcId = pclist.get(0).getId();
				if(pclist.get(0).getUser().getId().equals(userId)){
					msg = "noAddSelf";
				}else{
					if(pcrManager.listInfoByUserId(userId).size() > 0){//已加入别的家长群
						msg = "noAdd";
					}else{
						Integer flag =pcrManager.addParentClubRelation(userId, pcId, CurrentTime.getCurrentTime(), "");
						if(flag > 0){
							msg ="success";
						}
					}
				}
			}else{
				msg = "noInfo";
			}
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	
	/**
	 * 根据邀请码获取家长群信息（申请加入时获取信息 用）
	 * @author zdf
	 * 2019-9-28 上午10:08:53
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getPClubInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ParentClubRelationManager pcrManager = (ParentClubRelationManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB_RELATION);
		ParentClubManager pcManager = (ParentClubManager) AppFactory.instance(null).getApp(Constants.WEB_PARENT_CLUB);
		String clubCode = CommonTools.getFinalStr("clubCode", request);
		Integer userId=CommonTools.getLoginUserId(request);
		String msg = "noInfo";
		Map<String, Object> map = new HashMap<String, Object>();
		if(!clubCode.equals("")){
			clubCode = clubCode.toUpperCase();
			List<ParentClubInfo> pcList = pcManager.listParentClubByClubCode(clubCode);
			if(pcList.size() >  0){
				if(pcList.get(0).getUser().getId().equals(userId)){
					msg = "noAddSelf";
				}else{
					msg = "success";
					ParentClubInfo pc = pcList.get(0);
					map.put("ownerInfo", pc.getUser().getRealName());
					map.put("clubName", pc.getClubName());
					map.put("clubProfile", pc.getClubProfile());
					map.put("clubNum", pcrManager.listInfoByParentCludId(pc.getId()));
				}
			}
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}