/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.homework;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.factory.AppFactory;
import com.zsd.module.HwAbilityRelationInfo;
import com.zsd.module.HwMindRelationInfo;
import com.zsd.module.HwQueInfo;
import com.zsd.page.PageConst;
import com.zsd.service.HwAbilityRelationManager;
import com.zsd.service.HwMindRelationManager;
import com.zsd.service.HwQueManager;
import com.zsd.tools.CommonTools;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 07-23-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class HomeWorkAction extends DispatchAction {
	
	/**
	 * 导向系统家庭作业题库页面
	 * @author wm
	 * @date 2019-7-23 下午05:20:26
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward goHwPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("hwPage");
	}
	
	/**
	 * 分页获取系统家庭作业题库
	 * @author wm
	 * @date 2019-7-23 下午05:21:35
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward goHwData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		HwQueManager hqm = (HwQueManager) AppFactory.instance(null).getApp(Constants.WEB_HW_QUE_INFO);
		HwMindRelationManager hmrm = (HwMindRelationManager) AppFactory.instance(null).getApp(Constants.WEB_HW_MIND_RELATION_INFO);
		HwAbilityRelationManager harm = (HwAbilityRelationManager) AppFactory.instance(null).getApp(Constants.WEB_HW_ABILITY_RELATION_INFO);
		Integer loreId = CommonTools.getFinalInteger("loreId", request);
		Integer count = hqm.getCountByLoreId(loreId);
		String msg = "暂无记录";
		Map<String,Object> map = new HashMap<String,Object>();
		if(count > 0){
			Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
			Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
			List<HwQueInfo> hqList = hqm.listPageInfoByLoreId(loreId, pageNo, pageSize);
			msg = "success";
			List<Object> list_d = new ArrayList<Object>();
			if(hqList.size() > 0){
				for(HwQueInfo hq : hqList){
					Map<String,Object> map_d = new HashMap<String,Object>();
					Integer hwId = hq.getId();
					map_d.put("id", hwId);
					map_d.put("btName", hq.getBuffetTypeInfo().getTypes());
					map_d.put("loreName", hq.getLoreInfo().getLoreName());
					map_d.put("hwTitle", hq.getTitle());
					String mindStr = "";
					String abilityStr = "";
					List<HwMindRelationInfo> hmrList = hmrm.listInfoByOpt(0, hwId);
					for(HwMindRelationInfo hmr : hmrList){
						mindStr += hmr.getBuffetMindTypeInfo().getMind() + ",";
					}
					if(!mindStr.equals("")){
						mindStr = mindStr.substring(0, mindStr.length() - 1);
					}
					List<HwAbilityRelationInfo>  harList = harm.listInfoByOpt(0, hwId);
					for(HwAbilityRelationInfo har : harList){
						abilityStr += har.getBuffetAbilityTypeInfo().getAbility();
					}
					map_d.put("mindStr", mindStr);
					map_d.put("abilityStr", abilityStr);
					map_d.put("inUse", hq.getInUse().equals(0) ? "有效" : "无效");
					list_d.add(map_d);
				}
				map.put("data", list_d);
				map.put("count", count);
				map.put("code", 0);
			}
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}