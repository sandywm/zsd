/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.studio;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.action.base.Transcode;
import com.zsd.factory.AppFactory;
import com.zsd.module.NetTeacherInfo;
import com.zsd.module.NetTeacherStudent;
import com.zsd.module.NetTeacherStudioInfo;
import com.zsd.module.NetTeacherStudioRelationInfo;
import com.zsd.module.User;
import com.zsd.service.NetTeacherInfoManager;
import com.zsd.service.NetTeacherStudentManager;
import com.zsd.service.NetTeacherStudioManager;
import com.zsd.service.NetTeacherStudioNewsManager;
import com.zsd.service.NetTeacherStudioRelationManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.util.Constants;


public class NtStudioAction extends DispatchAction {
	/**
	 * 更新网络导师工作室信息
	 * @author zdf
	 * 2019-7-28 上午10:05:08
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward updateNTStudio(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherStudioManager ntStudioManager = (NetTeacherStudioManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO);
		Integer id=CommonTools.getFinalInteger("ntStudioId", request);
		String studioName =Transcode.unescape_new("studioName",request);
		/*Integer maxNum=CommonTools.getFinalInteger("maxNum", request);*/
		String studioProfile =Transcode.unescape_new("studioProfile",request);
		Map<String,Object> map = new HashMap<String,Object>();
		String msg = "fail";
		boolean flag = ntStudioManager.updateNTStudio(id, studioName,/* maxNum,*/ studioProfile);
		if(flag){
			msg ="success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 获取网络老师工作室信息
	 * @author zdf
	 * 2019-7-28 上午10:06:32
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getNTStudio(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherStudioManager ntStudioManager = (NetTeacherStudioManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO);
		NetTeacherStudioRelationManager ntsrManager = (NetTeacherStudioRelationManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO_RELATION);
		NetTeacherStudentManager ntsManager = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT); 
		Integer userId=CommonTools.getLoginUserId(request);
		Map<String,Object> map = new HashMap<String,Object>();
		List<Object> list_d = new ArrayList<Object>();
		List<NetTeacherStudioInfo> ntStudiolist= ntStudioManager.listNTStudioByuId(userId);
		String msg="";
		if(ntStudiolist.isEmpty()){
			msg="noInfo";
		}else{
			NetTeacherStudioInfo ntStudio = ntStudiolist.get(0);
			map.put("id", ntStudio.getId());
			map.put("studioName", ntStudio.getStudioName());
			map.put("studioCode", ntStudio.getStudioCode());
			map.put("studioProfile", ntStudio.getStudioProfile());
			
			List<NetTeacherStudioRelationInfo> ntsrlist = ntsrManager.listInfoByNtStudioId(ntStudio.getId());
			for (Iterator<NetTeacherStudioRelationInfo> itr = ntsrlist.iterator(); itr.hasNext();) {
				NetTeacherStudioRelationInfo ntsrInfo = (NetTeacherStudioRelationInfo) itr.next();
				Map<String,Object> map_d= new HashMap<String,Object>();
				Integer teaId = ntsrInfo.getTeaId();
				List<NetTeacherStudent> ntslist = ntsManager.listByntId(teaId);
				User user =  ntslist.get(0).getNetTeacherInfo().getUser();
				map_d.put("ntName",user.getRealName());
				map_d.put("ntPortrait", user.getPortrait());
				map_d.put("freetrial", ntsManager.getByStuNum(teaId, -1));
				map_d.put("free", ntsManager.getByStuNum(teaId, 2));
				map_d.put("pay", ntsManager.getByStuNum(teaId, 1));
				list_d.add(map_d);
			}
			map.put("ntStudioInfo", list_d);
			msg="success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 获取其他工作室信息
	 * @author zdf
	 * 2019-9-5 上午09:56:46
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getOtherNTStudio(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		NetTeacherStudioRelationManager ntsrManager = (NetTeacherStudioRelationManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO_RELATION);
		NetTeacherStudentManager ntsManager = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT); 
		Integer userId=CommonTools.getLoginUserId(request);
		List<NetTeacherInfo> ntlist =ntManager.listntInfoByuserId(userId);
		Integer teaId =ntlist.get(0).getId();
	    List<NetTeacherStudioRelationInfo> ntsrlists = ntsrManager.listInfoByTeaId(teaId);
	    String msg ="";
		Map<String,Object> map = new HashMap<String,Object>();
		List<Object> list_d = new ArrayList<Object>();
	    if(ntsrlists.isEmpty()){
	    	msg="noInfo";
	    }else{
	    	NetTeacherStudioRelationInfo ntsrInfo = ntsrlists.get(0);
	    	map.put("id", ntsrInfo.getNetTeacherStudioInfo().getId());//工作室主键
			map.put("studioName", ntsrInfo.getNetTeacherStudioInfo().getStudioName());//工作室名
			map.put("studioCode", ntsrInfo.getNetTeacherStudioInfo().getStudioCode());//工作室邀请码
			map.put("studioProfile", ntsrInfo.getNetTeacherStudioInfo().getStudioProfile());//工作室简介
			
			List<NetTeacherStudioRelationInfo> ntsrlist = ntsrManager.listInfoByNtStudioId(ntsrInfo.getNetTeacherStudioInfo().getId());
			for (Iterator<NetTeacherStudioRelationInfo> itr = ntsrlist.iterator(); itr.hasNext();) {
				NetTeacherStudioRelationInfo ntsrInfos = (NetTeacherStudioRelationInfo) itr.next();
				Map<String,Object> map_d= new HashMap<String,Object>();
				Integer ntId = ntsrInfos.getTeaId();
				List<NetTeacherStudent> ntslist = ntsManager.listByntId(ntId);
				User user =  ntslist.get(0).getNetTeacherInfo().getUser();
				map_d.put("ntName",user.getRealName());
				map_d.put("ntPortrait", user.getPortrait());
				map_d.put("freetrial", ntsManager.getByStuNum(teaId, -1));
				map_d.put("free", ntsManager.getByStuNum(teaId, 2));
				map_d.put("pay", ntsManager.getByStuNum(teaId, 1));
				if(teaId.equals(ntslist.get(0).getNetTeacherInfo().getId())){
					list_d.add(0,map_d);
				}else{
					list_d.add(map_d);
				}
				
			}
	    }
		map.put("msg", msg);
		map.put("ntStudioInfo", list_d);
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	/**
	 * 判断是否加入工作室(通过用户编号)
	 * @author zdf
	 * 2019-9-5 上午11:31:08
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward checkOtherStudio(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		NetTeacherStudioRelationManager ntsrManager = (NetTeacherStudioRelationManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO_RELATION);
		Integer userId=CommonTools.getLoginUserId(request);
		List<NetTeacherInfo> ntlist =ntManager.listntInfoByuserId(userId);
		Integer teaId =ntlist.get(0).getId();
	    List<NetTeacherStudioRelationInfo> ntsrlists = ntsrManager.listInfoByTeaId(teaId);
	    boolean flag = false;
	    Map<String,Object> map = new HashMap<String,Object>();
	    if(ntsrlists.isEmpty()){
	    	flag = true;
	    }
	    map.put("msg", flag);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 添加网络老师工作室新闻
	 * @author zdf
	 * 2019-7-28 上午11:36:21
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addNtsNews(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherStudioNewsManager ntsNewsManager = (NetTeacherStudioNewsManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO_NEWS);
		Integer ntStudioId=CommonTools.getFinalInteger("ntStudioId", request);
		String newsTitle = Transcode.unescape_new("newsTitle",request);
		String newsContent =Transcode.unescape_new("newsContent",request);
		String sendTime = CurrentTime.getCurrentTime();
		Map<String,Object> map = new HashMap<String,Object>();
		String msg = "fail";
		Integer flag = ntsNewsManager.addNTStudioNews(ntStudioId, newsTitle, newsContent, sendTime);
		if(flag > 0){
			msg ="success";
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
	/**
	 * 通过工作室邀请码加入工作室
	 * @author zdf
	 * 2019-7-31 上午09:49:18
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addNtStudioRelation(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherStudioManager ntStudioManager = (NetTeacherStudioManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO);
		NetTeacherStudioRelationManager ntsrManager = (NetTeacherStudioRelationManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO_RELATION);
		NetTeacherInfoManager ntManager = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		String studioCode =CommonTools.getFinalStr("studioCode",request);
		Integer userId=CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		String msg = "fail";
		Map<String,Object> map = new HashMap<String,Object>();
		if(userId > 0 && roleId.equals(Constants.NET_TEA_ROLE_ID)){
			List<NetTeacherStudioInfo> ntStudiolist = ntStudioManager.listNTStudioBystudioCode(studioCode);
			if(ntStudiolist.size() > 0){
				Integer  ntStudioId = ntStudiolist.get(0).getId();
				List<NetTeacherInfo> ntlist =ntManager.listntInfoByuserId(userId);
				if(ntlist.size() > 0){
					Integer teaId =ntlist.get(0).getId();
					if(ntsrManager.listInfoByTeaId(teaId).size() > 0){//已加入别的工作室
						msg = "noAdd";
					}else{
						Integer flag =ntsrManager.addNTStudioRelation(ntStudioId, teaId, CurrentTime.getCurrentTime(), "");
						if(flag > 0){
							msg ="success";
						}
					}
				}
			}else{
				msg = "noInfo";
			}
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
		
	}
	
	/**
	 * 根据邀请码获取工作室信息（申请加入是获取信息 用）
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward getNtStudioInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		NetTeacherStudioManager ntsm = (NetTeacherStudioManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO);
		NetTeacherStudioRelationManager ntsrm = (NetTeacherStudioRelationManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDIO_RELATION);
		String studioCode = CommonTools.getFinalStr("studioCode", request);
		String msg = "noInfo";
		Map<String, Object> map = new HashMap<String, Object>();
		if(!studioCode.equals("")){
			List<NetTeacherStudioInfo> ntsList = ntsm.listNTStudioBystudioCode(studioCode);
			if(ntsList.size() >  0){
				msg = "success";
				NetTeacherStudioInfo nts = ntsList.get(0);
				map.put("ownerInfo", nts.getNetTeacherInfo().getUser().getRealName());
				map.put("studioName", nts.getStudioName());
				map.put("teaNum", ntsrm.listInfoByNtStudioId(nts.getId()).size());
			}
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}