/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.order;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.factory.AppFactory;
import com.zsd.module.NetTeacherInfo;
import com.zsd.module.NetTeacherStudent;
import com.zsd.module.StudentParentInfo;
import com.zsd.module.StudentPayOrderInfo;
import com.zsd.page.PageConst;
import com.zsd.service.NetTeacherInfoManager;
import com.zsd.service.NetTeacherStudentManager;
import com.zsd.service.StudentParentInfoManager;
import com.zsd.service.StudentPayOrderInfoManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 09-28-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class OrderAction extends DispatchAction {
	
	/**
	 * 导向订单页面
	 * @author wm
	 * @date 2019-9-28 上午10:29:06
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward goOrderPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("orderPage");
	}
	
	/**
	 * 分页获取订单列表
	 * @author wm
	 * @date 2019-9-28 上午10:29:28
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward getOrderData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		NetTeacherInfoManager ntm = (NetTeacherInfoManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_INFO);
		StudentPayOrderInfoManager om = (StudentPayOrderInfoManager) AppFactory.instance(null).getApp(Constants.WEB_STUDENT_PAY_ORDER_INFO);
		NetTeacherStudentManager ntsm = (NetTeacherStudentManager) AppFactory.instance(null).getApp(Constants.WEB_NET_TEACHER_STUDENT);
		StudentParentInfoManager spm = (StudentParentInfoManager) AppFactory.instance(null).getApp(Constants.WEB_STUDENT_PARENT_INFO);
		Integer userId = CommonTools.getLoginUserId(request);
		Integer roleId = CommonTools.getLoginRoleId(request);
		Integer comStatus = CommonTools.getFinalInteger("comStatus", request);//0:未完成,1:已完成,2:已取消
		String sDate = CommonTools.getFinalStr("sDate", request);
		String eDate = CommonTools.getFinalStr("eDate", request);
		String  msg = "暂无记录";
		Map<String, Object> map = new HashMap<String, Object>();
		if(userId > 0 && roleId > 0){
			if(roleId.equals(Constants.PATENT_ROLE_ID)){
				StudentParentInfo sp = spm.getEntityByParId(userId);
				if(sp != null){//获取自己孩子的id
					userId = sp.getStu().getId();
				}
				if(sDate.equals("") || eDate.equals("")){
					eDate = CurrentTime.getStringDate();
					sDate = CurrentTime.getFinalDate(-2);
				}
			}
			List<Object> list_d = new ArrayList<Object>();
			Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
			Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
			List<StudentPayOrderInfo> sordeList = om.listOrderPageInfoByOpt(userId, sDate, eDate, comStatus, pageNo, pageSize);
			for (Iterator<StudentPayOrderInfo> itrs = sordeList.iterator(); itrs.hasNext();) {
				StudentPayOrderInfo sorder = (StudentPayOrderInfo) itrs.next();
				Map<String,Object> map_d = new HashMap<String,Object>();
				map_d.put("stuName", sorder.getUser().getRealName());
				map_d.put("payDate", sorder.getAddDate());
				map_d.put("payMoney", sorder.getPayMoney());
//					map_d.put("endDate", sorder.getEndDate());
				list_d.add(map_d);
			}
			
//			List<NetTeacherInfo> ntlist = ntm.listntInfoByuserId(userId);
//			Integer ntId = ntlist.get(0).getId();
//			List<NetTeacherStudent> ntslist=ntsm.listNtsByNtId(ntId, 1);
//			List<Object> list_d = new ArrayList<Object>();
//			Integer count =0;
//			if(!ntslist.isEmpty()){
//				for (Iterator<NetTeacherStudent> iter = ntslist.iterator(); iter.hasNext();) {
//					NetTeacherStudent nts = (NetTeacherStudent) iter.next();
//					 Integer ntsId = nts.getId();
//					 count = om.getspOrderInfoCount(ntsId);
//					 if(count>0){
//						 msg="success";
//						 Integer pageSize = PageConst.getPageSize(String.valueOf(request.getParameter("limit")), 10);//等同于pageSize
//						 Integer pageNo = CommonTools.getFinalInteger("page", request);//等同于pageNo
//						 List<StudentPayOrderInfo> sordeList = om.listOrderPageInfoByOpt(userId, sDate, eDate, comStatus, pageNo, pageSize);
//							for (Iterator<StudentPayOrderInfo> itrs = sordeList.iterator(); itrs.hasNext();) {
//								StudentPayOrderInfo sorder = (StudentPayOrderInfo) itrs.next();
//								Map<String,Object> map_d = new HashMap<String,Object>();
//								map_d.put("stuName", sorder.getUser().getRealName());
//								map_d.put("payDate", sorder.getAddDate());
//								map_d.put("payMoney", sorder.getPayMoney());
////								map_d.put("endDate", sorder.getEndDate());
//								list_d.add(map_d);
//							}
//					 }
//				}
//				map.put("data", list_d);
//				map.put("count", count);
//				map.put("code", 0);
//			}
		}
		map.put("msg", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}